#TODO trim to basics
#TODO does this actually work? The variables should have TF_VAR_. Where do these variables come from?
vmanage_user: "{{ lookup('env','VMANAGE_USER') }}"
vmanage_pass: "{{ lookup('env','VMANAGE_PASS') }}"
# default is "cisco" encrypted, 20.5 and above don't allow plaintext passwords
viptela_encrypted_pass: "{{ lookup('env','VMANAGE_ENCRYPTED_PASS') }}"
vmanage_org: "{{ lookup('env','VMANAGE_ORG') | default('', true) }}"
smart_token: "{{ lookup('env','SMART_TOKEN') | default('', true) }}"
ansible_user: "{{ vmanage_user }}"
ansible_password: "{{ vmanage_pass }}"
ssh_pubkey: "{{ lookup('env','SSH_PUBKEY_BASE64') | b64decode | trim }}"
#TODO move definition of these files location to env script
sdwan_serial_file: "/ansible/licenses/serialFile.viptela"
sdwan_cert_dir: "/ansible/myCA"

sdwan_datacenter: "{{ lookup('env', 'SDWAN_DATACENTER') }}"
sdwan_cidr: "{{ lookup('env', 'NETWORK_CIDR') }}"
acl_cidr_blocks: "{{ lookup('env', 'ACL_RANGES_IPV4_BASE64') | b64decode | trim }}"
acl6_cidr_blocks: "{{ lookup('env', 'ACL_RANGES_IPV6_BASE64') | b64decode | trim }}"

csr1000v_image: "{{ lookup('env','CSR1000V_IMAGE') | default('csr1000v-16.12.02r', true) }}"
ubuntu_image: "{{ lookup('env','UBUNTU_IMAGE') | default('ubuntu-22-04', true) }}"
# TODO Encrypt/Vault this in real life
sdwan_ca_passphrase: "{{ lookup('env','SDWAN_CA_PASSPHRASE') }}"
sdwan_ca_cert: "{{ sdwan_cert_dir }}/myCA.pem"
# VMware
vmware_vmanage_template: "viptela-manage-{{ viptela_version }}"
vmware_vsmart_template: "viptela-smart-{{ viptela_version }}"
vmware_vbond_template: "viptela-edge-{{ viptela_version }}"
vmware_vedge_template: "viptela-edge-{{ viptela_version }}"
vmware_cedge_template: "{{ iosxe_sdwan_image }}"
folder: "{{ lookup('env','TF_VAR_folder') | default('', true) }}"
# AWS
aws_vmanage_ami: "{{ lookup('env','VMANAGE_AMI') }}"
aws_vbond_ami: "{{ lookup('env','VBOND_AMI') }}"
aws_vsmart_ami: "{{ lookup('env','VSMART_AMI') }}"
aws_vmanage_instance_type: "{{ lookup('env','VMANAGE_INSTANCE_TYPE') | default('t2.2xlarge', true) }}"
aws_vbond_instance_type: "{{ lookup('env','VBOND_INSTANCE_TYPE') | default('t2.medium', true) }}"
aws_vsmart_instance_type: "{{ lookup('env','VSMART_INSTANCE_TYPE') | default('t2.medium', true) }}"
