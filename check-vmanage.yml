- name: Wait for vmanage mgmt interface to be available (this could take a few minutes)
  hosts: localhost
  connection: local
  tags:
    - check_control
    - check_all
    - control
    - CA
  any_errors_fatal: true
  gather_facts: no
  vars:
    vmanage_host: "{{ groups.vmanage_hosts | first }}"
    vmanage_mgmt_interface: "{{ hostvars[vmanage_host].mgmt_interface | default('ansible_host') }}"
  tasks:
    - name: Wait until the mgmt interface comes up
      virl_lab_facts:
        host: "{{ virl_host }}"
        user: "{{ virl_username }}"
        password: "{{ virl_password }}"
        lab: "{{ virl_lab }}"
      register: result
      until: result.virl_facts.nodes[vmanage_host][vmanage_mgmt_interface] | default(False)
      when: vmanage_mgmt_interface == 'ansible_host'
      retries: 12
      delay: 10

    - name: Refresh Inventory
      meta: refresh_inventory   

    - set_fact:
        vmanage_ip: "{{ hostvars[vmanage_host][vmanage_mgmt_interface] | ipaddr('address') }}"

    - debug:
        var: vmanage_ip

- name: Verify that vManage is fully operational
  hosts: localhost
  connection: local
  tags:
    - check_control
    - check_all
    - control
    - CA
  vars:
    vmanage_host: "{{ groups.vmanage_hosts | first }}"
    vmanage_mgmt_interface: "{{ hostvars[vmanage_host].mgmt_interface | default('ansible_host') }}"
    vmanage_ip: "{{ hostvars[vmanage_host][vmanage_mgmt_interface] | ipaddr('address') }}"
  any_errors_fatal: true
  gather_facts: no
  tasks:
    - name: Waiting for vManage API to start
      uri:
        url: "https://{{ vmanage_ip }}/dataservice/system/device/controllers"
        method: POST
        body:
          j_username: "{{ vmanage_user }}"
          j_password: "{{ vmanage_pass }}"
        body_format: form-urlencoded
        return_content: yes
        validate_certs: no
      no_log: true
      register: uri_results
      delegate_to: localhost
      failed_when: false
      until: uri_results.msg.find("OK") != -1
      retries: 60
      delay: 10