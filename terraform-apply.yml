- name: Run terraform
  hosts: localhost
  connection: local
  any_errors_fatal: true
  gather_facts: no
  tasks:
    - assert:
        that:
          - sdwan_type == "control" or sdwan_type == "edges"
        msg: "sdwan_type must be set to either 'control' or 'edges'"

    - name: Generate Terraform variables file
      template:
        src: "templates/terraform/{{ sdwan_type }}_tfvars.j2"
        dest: "terraform-sdwan/vmware/{{ sdwan_type }}.tfvars"
      tags: [tfvars, plan]
      when: sdwan_type is defined

    - name: Terraform plan
      terraform:
        project_path: 'terraform-sdwan/vmware'
        state: planned
        plan_file: "{{ sdwan_type }}.tfplan"
        workspace: "{{ sdwan_type }}"
        variables_file: "{{ sdwan_type }}.tfvars"
        variables:
          folder: "{{ folder }}-{{ sdwan_type }}"
          vmanage_template: "{{ vmware_vmanage_template }}"
          vbond_template: "{{ vmware_vbond_template }}"
          vsmart_template: "{{ vmware_vsmart_template }}"
          vedge_template: "{{ vmware_vedge_template }}"
          cedge_template: "{{ vmware_cedge_template }}"
          cloudinit_type: "{{ cloudinit_type }}"
        force_init: yes
      tags: [plan, apply]
      when: sdwan_type is defined

    - name: Terraform apply
      terraform:
        project_path: 'terraform-sdwan/vmware'
        state: present
        plan_file: "{{ sdwan_type }}.tfplan"
        workspace: "{{ sdwan_type }}"
        variables_file: "{{ sdwan_type }}.tfvars"
      tags: apply
      when: sdwan_type is defined
      register: outputs

    - meta: refresh_inventory
      tags: always
        