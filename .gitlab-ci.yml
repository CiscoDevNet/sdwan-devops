stages:
  - clean
  - build-ca
  - decrypt-license
  - build-control
  - config-control
  - deploy-edges
  - attach-templates
  - waitfor-edges
  - test

image: ghcr.io/ciscodevnet/sdwan-devops:0.0.7

variables:
  ANSIBLE_GATHERING: "smart"
  ANSIBLE_CONFIG: "./ansible.cfg"
  ANSIBLE_ROLES_PATH: "./roles"
  GIT_SUBMODULE_STRATEGY: "recursive"

cache:
  paths:
    - myCA/
    - licenses/

clean:
  stage: clean
  script:
    - ansible-playbook --tags "delete" clean-virl.yml
  only:
    changes:
      - files/hq1.yaml

build-ca:
  stage: build-ca
  script:
    - ansible-playbook build-ca.yml
  only:
    changes:
      - files/hq1.yaml

decrypt-license:
  stage: decrypt-license
  script: |
    mkdir licenses
    echo $ANSIBLE_VAULT_PASSWORD > vault-password-file
    ansible-vault decrypt --vault-password-file vault-password-file files/serialFile.viptela --output licenses/serialFile.viptela

  only:
    changes:
      - files/hq1.yaml

build-control:
  stage: build-control
  script:
    - ansible-playbook build-virl.yml
  only:
    changes:
      - files/hq1.yaml
    
config-control:
  stage: config-control
  script:
    - ansible-playbook config-sdwan.yml
  only:
    changes:
      - files/hq1.yaml
  
deploy-edges:
  stage: deploy-edges
  script:
    - ansible-playbook deploy-virl.yml
  only:
    changes:
      - files/hq1.yaml

attach-templates:
  stage: attach-templates
  script:
    - ansible-playbook attach-template.yml

waitfor-edges:
  stage: waitfor-edges
  script:
    - ansible-playbook waitfor-sync.yml
              
test:
  stage: test
  script:
    - ansible-playbook check-sdwan.yml
