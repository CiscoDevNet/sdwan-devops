- name: Import vManage Templates
  hosts: localhost
  connection: local
  gather_facts: no
  roles:
    - ansible-viptela
  tags:
    - control
    - templates
  tasks:
    - set_fact:
        vmanage_host: "{{ groups.vmanage_hosts | first }}"

    - set_fact:
        vmanage_ip: "{{ hostvars[vmanage_host].ansible_host }}"

    - name: Import feature templates
      vmanage_feature_template:
        host: "{{ vmanage_ip }}"
        user: "{{ vmanage_user }}"
        password: "{{ vmanage_pass }}"
        state: present
        aggregate: "{{ vmanage_feature_templates }}"

    - name: Import device templates
      vmanage_device_template:
        host: "{{ vmanage_ip }}"
        user: "{{ vmanage_user }}"
        password: "{{ vmanage_pass }}"
        state: present
        aggregate: "{{ vmanage_device_templates }}"

- name: Attach template to device
  hosts: sdwan_edge:&virl_hosts
  connection: local
  gather_facts: no
  tags:
    - start
    - edge
  roles:
    - ansible-virl
    - ansible-viptela
  tasks:
    - set_fact:
        vmanage_host: "{{ groups.vmanage_hosts | first }}"

    - set_fact:
        vmanage_ip: "{{ hostvars[vmanage_host].ansible_host }}"

    - name: Attach template to device
      vmanage_device_attachment:
        host: "{{ vmanage_ip }}"
        user: "{{ vmanage_user }}"
        password: "{{ vmanage_pass }}"
        uuid: "{{ sdwan_uuid }}"
        device_name: "{{ inventory_hostname }}"
        system_ip: "{{ sdwan_system_ip }}"
        site_id: "{{ sdwan_site_id }}"
        template: "{{ sdwan_template.name }}"
        variables: "{{ sdwan_template.variables | default(omit) }}"
        wait: yes
        state: present
      when: sdwan_template is defined
      register: attachment_results

- name: Bootstrap the SD-WAN edge nodes
  hosts: sdwan_edge:&virl_hosts
  connection: local
  gather_facts: no
  tags:
    - start
    - edge
  roles:
    - ansible-viptela
  serial: 1
  # This is a workaround for a bug in vmanage.  When multiple requests
  # for boostrap are made to vmanage at the same time, it gets corrupted
  tasks:
    - set_fact:
        vmanage_host: "{{ groups.vmanage_hosts | first }}"

    - set_fact:
        vmanage_ip: "{{ hostvars[vmanage_host].ansible_host }}"

    - name: Get bootstrap info
      vmanage_device_bootstrap:
        host: "{{ vmanage_ip }}"
        user: "{{ vmanage_user }}"
        password: "{{ vmanage_pass }}"
        uuid: "{{ sdwan_uuid }}"
      register: result
      retries: 10
      delay: 10
      until: result is not failed 

    - name: Generating day0 config
      set_fact:
        day0_config: "{{ result.bootstrap.bootstrapConfig }}"
      when: result.bootstrap.bootstrapConfig is defined

- name: Start the SD-WAN edge nodes
  hosts: sdwan_edge:&virl_hosts
  connection: local
  gather_facts: no
  tags:
    - start
    - edge
  roles:
    - ansible-virl
  tasks:
    - name: Start Node
      virl_node:
        name: "{{ inventory_hostname }}"
        host: "{{ virl_host }}"
        user: "{{ virl_username }}"
        password: "{{ virl_password }}"
        lab: "{{ virl_lab }}"
        state: started
        image_definition: "{{ virl_image_definition | default(omit) }}"
        config: "{{ day0_config | default(omit) }}"

- name: Push Certs to Controllers
  hosts: sdwan_edge:&virl_hosts
  connection: local
  gather_facts: no
  tags:
    - start
    - edge
  roles:
    - ansible-virl
    - ansible-viptela
  tasks:
    - set_fact:
        vmanage_host: "{{ groups.vmanage_hosts | first }}"

    - set_fact:
        vmanage_ip: "{{ hostvars[vmanage_host].ansible_host }}"

    - name: Push Certs to Controllers
      vmanage_device_certificate:
        host: "{{ vmanage_ip }}"
        user: "{{ vmanage_user }}"
        password: "{{ vmanage_pass }}"
        state: push
      register: result
      retries: 10
      delay: 10
      until: result is not failed 
      run_once: yes