- import_playbook: clean-control.yml
  tags: [control, never]

- name: Delete Control Planw VMs
  hosts: localhost
  connection: local
  tags:
    - terraform
    - control
    - never
  any_errors_fatal: true
  gather_facts: no
  tasks:
    - name: Check for controls.tfvars file
      stat:
        path: 'terraform-sdwan/vmware/control.tfvars'
      register: control_stat_result

    - name: Terraform Destroy Control Plane
      terraform:
        project_path: 'terraform-sdwan/vmware'
        state: absent
        workspace: control
        variables_file: control.tfvars
        variables:
          datacenter: "{{ datacenter }}"
          cluster: "{{ cluster }}"
          resource_pool: "{{ resource_pool }}"
          datastore: "{{ datastore }}"
          iso_datastore: "{{ iso_datastore }}"
          iso_path: "{{ iso_path }}"
          vmanage_template: "{{ vmanage_template }}"
          vbond_template: "{{ vbond_template }}"
          vsmart_template: "{{ vsmart_template }}"
          vedge_template: "{{ vedge_template }}"     
      when: control_stat_result.stat.exists == true

- name: Delete Edge VMs
  hosts: localhost
  connection: local
  tags:
    - terraform
    - edges
    - never
  any_errors_fatal: true
  gather_facts: no
  tasks:
    - name: Check for edges.tfvars file
      stat:
        path: terraform-sdwan/vmware/edges.tfvars
      register: edges_stat_result

    - name: Terraform Destroy Edges
      terraform:
        project_path: 'terraform-sdwan/vmware'
        state: absent
        workspace: edges
        variables_file: edges.tfvars
        variables:
          datacenter: "{{ datacenter }}"
          cluster: "{{ cluster }}"
          resource_pool: "{{ resource_pool }}"
          datastore: "{{ datastore }}"
          iso_datastore: "{{ iso_datastore }}"
          iso_path: "{{ iso_path }}"
          vmanage_template: "{{ vmanage_template }}"
          vbond_template: "{{ vbond_template }}"
          vsmart_template: "{{ vsmart_template }}"
          vedge_template: "{{ vedge_template }}"     
      when: edges_stat_result.stat.exists == true